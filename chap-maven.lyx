#LyX 1.5.6 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
An introduction to Maven
\begin_inset LatexCommand index
name "Maven"

\end_inset

 and Project Layout
\begin_inset LatexCommand label
name "cha:Maven"

\end_inset


\end_layout

\begin_layout Section
Maven
\end_layout

\begin_layout Standard
A great web framework deserves a great build system, so Lift uses Maven
\begin_inset Foot
status open

\begin_layout Standard
\begin_inset LatexCommand htmlurl
target "http://maven.apache.org/"

\end_inset


\end_layout

\end_inset

.
 Maven
\begin_inset LatexCommand index
name "Maven"

\end_inset

 is a project management tool developed by the Apache Software Foundation
\begin_inset Foot
status collapsed

\begin_layout Standard
\begin_inset LatexCommand htmlurl
target "http://www.apache.org"

\end_inset


\end_layout

\end_inset

.
 Maven's concept of a single config file, known as the Project Object Model
 or pom file, that controls the project's build, dependencies, reporting
 and documentation generation was a desirable feature for the Lift project.
 We won't go deeply into Maven's internals as it's not needed for building
 an application with Lift, but during the building of the sample application
 we will highlight any changes that we need to make to the pom file then.
\end_layout

\begin_layout Standard
Below is a pom.xml file for the sample JPA application later in the book.
 
\end_layout

\begin_layout Standard
\begin_inset LatexCommand ref
reference "lst:JPA-Master-pom.xml"

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
In the listing you will see some metadata about the application, listings
 of repositories to download updated libraries, dependancies and a build
 and a reporting lifecycle.
 One thing to point out regarding Maven and Lift, is that Maven 2.0.7 or greater
 is required.
\end_layout

\begin_layout Standard
In the pom file above there were two lifecycles listed, build and reporting.
 Maven uses the concept of lifecycle phases for execution.
 Some of the default phases include validate, compile, test, package.
 At the beginning of your development you'll probably just use clean and
 jetty:run, in the form 
\family typewriter
of mvn -U clean jetty:run.
\family default

\begin_inset Note Note
status open

\begin_layout Standard
Maybe we have a section in the Appendix about scala:cc and JavaRebel, or
 something like 
\begin_inset Quotes eld
\end_inset

How we develop
\begin_inset Quotes erd
\end_inset

 -Ty.
 That would work, but I think we should at least mention it and cross-ref
 here
\end_layout

\end_inset

 When you issue 
\family typewriter
mvn -U clean jetty:run
\family default
 from the root of your application directory, the 
\family typewriter
-U
\family default
 switch will tell Maven to look for updates to the JARs that the application
 depends on, 
\family typewriter
clean
\family default
 wil clean the compiled classes, and 
\family typewriter
jetty:run
\family default
 will compile your source, start Jetty as a web container and deploy your
 application to 
\family typewriter

\begin_inset LatexCommand htmlurl
target "http://localhost:8080/"

\end_inset


\family default
.
 
\end_layout

\begin_layout Standard
As your project matures you may start to require additional JARs due to
 new dependencies, such as talking to new Databases, you'll have to spend
 a bit of time in the 
\family typewriter
pom.xml
\begin_inset LatexCommand index
name "pom.xml"

\end_inset


\family default
 file.
 As mentioned earlier, we'll highlight these changes as we build the demo
 application.
 
\end_layout

\begin_layout Standard
If you'd like more information about the details of Maven, please visit
 
\family typewriter

\begin_inset LatexCommand htmlurl
target "http://maven.apache.org"

\end_inset

.
\end_layout

\begin_layout Section
Project Layout
\end_layout

\begin_layout Standard
The directory structure of a Lift application is straight-forward, but we'll
 highlight a few important locations here.
\end_layout

\begin_layout Description
<application_root>/src/main/scala This directory will contain your Scala
 source, such as snippets, model objects, and any libraries you write.
 The subfolder structure follows the traditional Java packaging style.
\end_layout

\begin_layout Description
<application_root>/src/main/webapp All of the static aspects of your application
, such as images, XHTML, JavaScript and CSS will be in this directory.
\end_layout

\begin_layout Description
<application_root>/src/main/webapp/templates-hidden You'll find Lift templates
 are contained here.
 [See LiftViewFirst]
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/dirlayout.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:dirlayout"

\end_inset

Project Directory Layout
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
